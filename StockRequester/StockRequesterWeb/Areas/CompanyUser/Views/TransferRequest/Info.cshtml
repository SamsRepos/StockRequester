@model TrViewModel

@{
    ViewData["Title"] = "Transfer Request Info";
}


<div class="card mb-2 border-white text-white">
    <h2 class="card-header border-white">@Model.Item.Name <b>@(Model.TransferRequest.Archived ? "(Archived)" : "")</b></h2>
    <div class="card-body border-white">
        @if (!string.IsNullOrWhiteSpace(Model.Item.Description))
        {
            <h3 class="card-title">Item Description</h3>
            var lines = Model.Item.Description.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
            foreach (var line in lines)
            {
                <p class="card-text" style="display:inline">
                    @(line)<br />
                </p>
            }
        }

        <hr />
        <h3 class="card-title">Associated Users</h3>
        <p class="card-subtitle">Request Created By: @(Model.TransferRequest.CreatedByUserId is not null ? $"{Model.AllCompanyUsers?.FirstOrDefault(u => u.Id == Model.TransferRequest.CreatedByUserId)?.Name}, {Model.AllCompanyUsers?.FirstOrDefault(u => u.Id == Model.TransferRequest.CreatedByUserId)?.Email}" : "<User Not Found>")</p>

        @if(Model.TransferRequest.GetEditedByUsersIds().Count > 0)
        {
            <p class="card-subtitle">Edited By:</p>
            @foreach(string id in Model.TransferRequest.GetEditedByUsersIds())
            {
                @if (Model.AllCompanyUsers?.FirstOrDefault(u => u.Id == id) is not null)
                {
                <p class="card-subtitle">- @(Model.AllCompanyUsers?.FirstOrDefault(u => u.Id == id)?.Name), @(Model.AllCompanyUsers?.FirstOrDefault(u => u.Id == id)?.Email)</p>
                }
                else
                {
                    <p class="card-subtitle">- @($"<User Not Found>")</p>
                }
            }
        }
        
        @if(Model.TransferRequest.GetStatusChangedByUsersIds().Count > 0)
        {
            <p class="card-subtitle">Status Updated By:</p>
            @foreach (string id in Model.TransferRequest.GetStatusChangedByUsersIds())
            {
                @if(Model.AllCompanyUsers?.FirstOrDefault(u=>u.Id==id) is not null)
                {
                    <p class="card-subtitle">- @(Model.AllCompanyUsers?.FirstOrDefault(u => u.Id == id)?.Name), @(Model.AllCompanyUsers?.FirstOrDefault(u => u.Id == id)?.Email)</p>
                }
                else
                {
                    <p class="card-subtitle">- @($"<User Not Found>")</p>
                }
            }
        }
            
        <hr />
        <h3 class="card-title">Request Details</h3>
        <p class="card-subtitle">Quantity: @Model.TransferRequest.Quantity</p>
        <p class="card-subtitle">From Origin: @(Model.TransferRequest.OriginLocation.Name)</p>
        <p class="card-subtitle">To Destination: @Model.TransferRequest.DestinationLocation.Name</p>
        
        <hr />
        <h3 class="card-title">Status: @Model.TransferRequest.Status.Status</h3>
        @if(!string.IsNullOrEmpty(Model.TransferRequest.Status.TrackingInfo))
        {
            <p class="card-subtitle">Tracking Info: @Model.TransferRequest.Status.TrackingInfo</p>
        }
        @if (!string.IsNullOrEmpty(Model.TransferRequest.Status.CancellationReason))
        {
            <p class="card-subtitle">Cancellation Reason: @Model.TransferRequest.Status.CancellationReason</p>
        }
    
        @if(!string.IsNullOrWhiteSpace(Model.TransferRequest.MiscNotes))
        {
            <hr />
            <h3 class="card-title">Miscellaneous Notes</h3>
            var lines = Model.TransferRequest.MiscNotes.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
            
            foreach (var line in lines)
            {
                <p class="card-text" style="display:inline">
                    @(line)<br />
                </p>
            }
            <hr />
        }

    </div>
    @if (
        Model.TransferRequest.FirstCreatedDateTime is not null || 
        Model.TransferRequest.DetailsLastEditedDateTime is not null ||
        Model.TransferRequest.StatusLastUpdatedDateTime is not null
    )
    {
        <div class="card-footer border-white text-muted">
            @if (Model.TransferRequest.FirstCreatedDateTime is not null)
            {
                <p class="card-subtitle">
                    Transfer Request Created: @Model.TransferRequest.FirstCreatedDateTime.ToString()
                </p>
            }
            @if (Model.TransferRequest.DetailsLastEditedDateTime is not null)
            {
                <p class="card-subtitle">
                    Details Last Edited: @Model.TransferRequest.DetailsLastEditedDateTime.ToString()
                </p>
            }
            @if (Model.TransferRequest.StatusLastUpdatedDateTime is not null)
            {
                <p class="card-subtitle">
                    Status Last Updated: @Model.TransferRequest.StatusLastUpdatedDateTime.ToString()
                </p>
            }
        </div>
    }
   
</div>

<div class="row p-1">
    <div class="col-12 col-md-6">
        <div class="w-100 btn-group" role="group">
            
            @if (!Model.TransferRequest.Archived)
            {
                <a asp-controller="TransferRequest" asp-action="Upsert" asp-route-id="@Model.TransferRequest.Id" asp-route-backLocationId="@Model.GetBackLocationId()" class="btn btn-primary mx-2">
                    <i class="bi bi-pencil"></i> Edit Details
                </a>

                <a asp-controller="TransferRequest" asp-action="UpdateStatus" asp-route-id="@Model.TransferRequest.Id" asp-route-backLocationId="@Model.GetBackLocationId()" class="btn btn-primary mx-2">
                    <i class="bi bi-pencil"></i> Update Status
                </a>

                @if (Model.TransferRequest.Status.CanBeArchived())
                {
                    <a asp-controller="TransferRequest" asp-action="Archive" asp-route-id="@Model.TransferRequest.Id" asp-route-backLocationId="@Model.GetBackLocationId()" class="btn btn-danger mx-2">
                        <i class="bi bi-archive"></i> Archive
                    </a>
                }

                @await Html.PartialAsync("_BackButton", Model.BackLocation)
            }
            else //archived:
            {
                <a asp-controller="TransferRequest" asp-action="Archive" asp-route-id="@Model.TransferRequest.Id" asp-route-backLocationId="@Model.GetBackLocationId()" class="btn btn-warning mx-2">
                    <i class="bi bi-reply"></i> Restore Request
                </a>
                @* <a asp-controller="Company" asp-action="ArchivedIndex" asp-route-id="@Model.TransferRequest.Id" asp-route-backLocationId="@Model.GetBackLocationId()" class="btn btn-primary mx-2">
                </a> *@

                <a asp-controller="Company" asp-action="ArchivedIndex" class="btn btn-secondary mx-2">
                    <i class="bi bi-arrow-left-circle"></i> Back to Archived Requests
                </a>
            }


        </div>
    </div>
</div>
